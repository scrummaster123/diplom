version: '3.5'

services:
  rabbit:
    image: rabbitmq:3-management
    restart: always
    hostname: rabbitmqhost
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - myLocalNetwork
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: otus_system
      POSTGRES_PASSWORD: otus-123@!
      POSTGRES_DB: otus_course
    ports:
      - "5412:5432"
    networks:
      - myLocalNetwork
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "otus_system" ]
      interval: 10s
      timeout: 5s
      retries: 5
      
  afisha.web:
    image: afisha.web
    build:
      context: .
      dockerfile: src/Afisha.Web/Dockerfile
    networks:
      - myLocalNetwork
    depends_on:
      rabbit:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: always
    environment:
      RABBITMQ_HOST: rabbitmqhost
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASS: guest
      ASPNETCORE_ENVIRONMENT: Docker
    ports:
      - "5182:8080" 

  afisha.notificationservice:
    image: afisha.notificationservice
    build:
      context: .
      dockerfile: src/Afisha.NotificationService/Dockerfile
    networks:
      - myLocalNetwork
    depends_on:
      rabbit:
        condition: service_healthy
    environment:
      WORKING_SETTINGS: Docker


volumes:
  rabbitmq_data:

networks:
  myLocalNetwork:
    driver: bridge



